import keyword  # 导入包

'''
Python 入门
	计算机语言: 人和计算机交流的工具
		分类: 机器语言 汇编语言 高级语言
	语言执行方式:  编译方式运行(需要先将文件编译成字节码进行执行) 解释方式执行(无需编译,直接一行一行运行)
	python介绍:
		发展史
		版本: 2.x 3.x  (其中2版本已经不再更新 语法和3不太一样)
		Python特点: 语法简洁 面向过程,面向对象 跨平台 可扩展性 强大的库
		python应用: Web开发 网络爬虫 游戏编程 人工智能
		python缺点: 速度较慢 不可加密
		python程序执行: 交互式执行 脚本式执行
'''

# 变量
'''
	变量名定义规则
		使用字母 数字 下划线 不能数字开头
		变量在使用之前必须赋值
'''

'''
	python 在定义变量的时候不需要考虑到变量类型 动态语言
	java/C 在定义变量的时候需要考虑到变量类型 静态语言
	
	强类型语言和弱类型语言
		强类型语言: 如果一个变量被指定了一个数据类型 不经过强制转换不会变化数据类型(Python)
		弱类型语言: 如果一个变量被指定了一个数据类型 使用的时候可以自动转换类型(PHP)
		
	python: 一种强类型动态语言
'''

# 修改变量值的时候可以忽略变量类型 type显示类型
a = 1
print(type(a))  # <class 'int'>
a = "123"
print(type(a))  # <class 'str'>

# 平行赋值
a = 2
b = 1
print(a, b)
a, b = b, a
print(a, b)

# 变量删除 默认程序结束的时候由python垃圾回收机制将变量进行回收 可以手动删除 一般不手动删除 除非变量存储过于大的内容
del a  # 删除操作耗费内存 删除的是变量名而非变量值 值等垃圾回收机制

# 常量
# 普通常量 不能改变的量 常量名一般使用大写命名
PI = 3.14159
# None None和""和0都是不同的含义
a = None  # type为NoneType
b = ""  # type为str
c = 0  # type为int

# 输入输出
print("Hello World", end="END")  # python 内置输出方法 默认end=\n结尾
print("Hello World", 2, sep="--")  # 可以输出多个值 默认sep=" "换行\
test = input("请输入文字:")  # input()是一种阻塞类型函数 只要运行到这个语句就会阻塞等待输入 中间可以显示提示文字 可以绑定到变量
print(test)

# 注释 给自己给别人的说明文本 分为单行注释和多行注释 一般经过python解释器但不执行 (除特殊注释:指定解释器位置 设置文件编码)

# 标识符
'''
	标识符: 变量名 类名 方法名
	规则: 字符,数字,下划线组成,不能数字开头 一定不能是python关键字 标识符区分大小写 一般不用@/$/*等字符
'''

# 关键字: python中具有特殊意义的符号
print(keyword.kwlist)  # 打印python关键字
